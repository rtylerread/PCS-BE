DELIMITER //
DROP PROCEDURE IF EXISTS ADD_USER;
//
CREATE PROCEDURE ADD_USER ( IN I_EMAIL VARCHAR(500), IN I_PASS VARCHAR(1000) )
BEGIN
	INSERT INTO USER (EMAIL, PASS, PAYMENT_STATUS, ACTIVE) VALUES (I_EMAIL, I_PASS, 'PAID', 'Y');
END //

DROP PROCEDURE IF EXISTS ADD_PROPERTY;
//
CREATE PROCEDURE ADD_PROPERTY (IN I_USER_ID INT, IN I_P_NAME VARCHAR(500), I_SQFT INT, IN I_TYPE VARCHAR(100), IN I_STORIES INT, IN I_NOTES VARCHAR(2000), IN I_ADDRESS VARCHAR(500), IN I_LAT INT, IN I_LON INT,	IN I_COM_RES VARCHAR(50))
BEGIN
	INSERT INTO PROPERTY (USER_ID, P_NAME, SQFT, TYPE, STORIES, NOTES, ADDRESS, LAT, LON, COM_RES)
		VALUES (I_USER_ID, I_P_NAME, I_SQFT, I_TYPE, I_STORIES, I_NOTES, I_ADDRESS, I_LAT, I_LON, I_COM_RES);
END
//
DROP PROCEDURE IF EXISTS ADD_APPOINTMENT;
//
CREATE PROCEDURE ADD_APPOINTMENT(IN I_PROPERTY_ID INT, IN I_SCHEDULED_DT DATETIME, IN I_COMPLETED_DT DATETIME, IN I_APP_STATUS VARCHAR(100))
BEGIN
	INSERT INTO APPOINTMENTS (PROPERTY_ID, SCHEDULED_DT, COMPLETED_DT, APP_STATUS)
		VALUES (I_PROPERTY_ID, I_SCHEDULED_DT, I_COMPLETED_DT, I_APP_STATUS);
END
//